
Source Link :- https://leetcode.com/problems/find-customer-referee/?envType=study-plan-v2&envId=top-sql-50

Table: Customer

+-------------+---------+
| Column Name | Type    |
+-------------+---------+
| id          | int     |
| name        | varchar |
| referee_id  | int     |
+-------------+---------+
In SQL, id is the primary key column for this table.
Each row of this table indicates the id of a customer, their name, and the id of the customer who referred them.
 

Find the names of the customer that are not referred by the customer with id = 2.

Return the result table in any order.

The result format is in the following example.

 

Example 1:

Input: 
Customer table:
+----+------+------------+
| id | name | referee_id |
+----+------+------------+
| 1  | Will | null       |
| 2  | Jane | null       |
| 3  | Alex | 2          |
| 4  | Bill | null       |
| 5  | Zack | 1          |
| 6  | Mark | 2          |
+----+------+------------+
Output: 
+------+
| name |
+------+
| Will |
| Jane |
| Bill |
| Zack |
+------+



Solution:- 

**SQL**

select name
from Customer
where referee_id != 2 or referee_id is null


**PySpark**

from pyspark.sql.functions import *
from pyspark.sql.types import *
from pyspark.sql.window import Window

customer = [(1,'Will',None),       
(2,'Jane',None),       
(3,'Alex',2),          
(4,'Bill',None),       
(5, 'Zack',1),          
(6,'Mark',2)]

customer_schema=["id","name","referee_id"]

customer_df = spark.createDataFrame(data=customer,schema=customer_schema)
customer_df.show()



customer_df.filter((col("referee_id")!=2) | (col("referee_id").isNull()))\
           .select("name").show()
